import curses
import random
import math

def initfield(center, size):

    field = []

    r, c = 0, 0
    # nested loop
    for y in range(center[0] - size[0] // 2, center[0] + size[0] // 2):
        # go through each row.
        field.append([[0, 0, 0]] * size[1])
        for x in range(center[1] - size[1], center[1] + size[1], 2):
            # go through each column of a row
            field[r][c] = [y, x, 0]
            print(field[r][c] )
            #stdscr.addstr(y, x, chr(9608))
            c = c + 1
        r = r + 1
        c = 0
     # generate the bombs!
    i = 0 # track the bomb count.
    while i < math.prod(size) // 7:
        index = random.randint(0, math.prod(size) - 1)
        # figure our r c
        r = index // size[1]
        c = index - r * size[1]
        if field[r][c][2] == -1:
            continue
        else:
            field[r][c][2] = -1
            i = i + 1

    # calculate the number of bombs.
    for r in range(0, size[0]):
        for c in range(0, size[1]):
            if field[r][c][2] == -1:
                # this cell has bomb
                continue

            for sr in [r - 1, r, r + 1]:
                for sc in [c - 1, c, c + 1]:
                    if sr < 0 or sr >= size[0] or sc < 0 or sc >= size[1]:
                        continue # skip
                    elif sr == r and sc == c:
                        continue # skip
                    else:
                        if field[sr][sc][2] == -1:
                            field[r][c][2] = field[r][c][2] + 1

    return field

   

def paintfield(stdscr, field, size):
    curses.start_color()
    curses.use_default_colors()
    for i in range(0, curses.COLORS):
      curses.init_pair(i +1, i, -1)
    for r in range(0, size[0]):
        for c in range(0, size[1]):
            if field[r][c][2] == -1:
                stdscr.addstr(field[r][c][0], field[r][c][1], chr(10041), curses.color_pair(field[r][c][2]+3))
            
            else:
              #if field[r][c][2] == 1:
                #stdscr.addstr(field[r][c][0], field[r][c][1], chr(9608))
                stdscr.addstr(field[r][c][0], field[r][c][1], str(field[r][c][2]),curses.color_pair(field[r][c][2] + 3))

def colordict():

    curses.start_color()
    curses.use_default_colors()

    for i in range(0, curses.COLORS):
      curses.initpair(i+1,i-1)

    return{
        'cover':curses.color_pair(9)
        "flag": curses.color_pair(12), # yellow
        "blasted": curses.color_pair(233),
        #"-1": curses.color_pair(16),
        "-1": curses.color_pair(53),
        "0": curses.color_pair(1),
        "1": curses.color_pair(13), # blue
        "2": curses.color_pair(48), # Green
        "3": curses.color_pair(10), # red
        "4": curses.color_pair(52), # 
        "5": curses.color_pair(94), # 
        "6": curses.color_pair(203), # 
        "7": curses.color_pair(90), # 
        "8": curses.color_pair(178), #       
    }

def sweeper(stdscr):
   
    sh, sw = stdscr.getmaxyx()
    center = [sh // 2, sw // 2]
    
    size = [10, 20]
    field = initfield(center, size)

    paintfield(stdscr, field, size)
    marcus=[5,5]
    while True:
      stdscr.addstr(field[marcus[0]][marcus[1]][0],field[marcus[0]][marcus[1]][1],chr(9608))
      key = stdscr.getch()
      if key == 27:
        break;

      if key == curses.KEY_UP or key == curses.KEY_RIGHT or key == curses.KEY_DOWN or key == curses.KEY_LEFT:
        if field[marcus[0]][marcus[1]][2] == -1:
                stdscr.addstr(field[marcus[0]][marcus[1]][0],field[marcus[0]][marcus[1]][1], chr(10041), curses.color_pair(2))
        else:
          stdscr.addstr(field[marcus[0]][marcus[1]][0],field[marcus[0]][marcus[1]][1],str(field[marcus[0]][marcus[1]][2]),curses.color_pair(field[marcus[0]][marcus[1]][2] + 3))
        

        if key == curses.KEY_UP:
          marcus=[marcus[0]-1,marcus[1]]
        elif key == curses.KEY_RIGHT:
          marcus=[marcus[0],marcus[1]+1]
        elif key == curses.KEY_DOWN:
          marcus=[marcus[0]+1,marcus[1]]
        elif key == curses.KEY_LEFT:
          marcus=[marcus[0],marcus[1]-1]
     

      

      if marcus[0] < 0:
        marcus[0]=size[0]-1
      if marcus[0] > size[0]-1:
        marcus[0]=0
      if marcus[1] < 0:
        marcus[1] = size[1] - 1
      if marcus[1] > size[1] -1:
        marcus[1] = 0
      stdscr.addstr(field[marcus[0]][marcus[0]][0],field[marcus[0]][marcus[1]][1],chr(9608))
    stdscr.getch()

curses.wrapper(sweeper)